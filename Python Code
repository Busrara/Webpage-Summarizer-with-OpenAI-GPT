def get_webpage_summary(url):
    """
    Extract text from URL and generate a summary using OpenAI API
    """

    try:

      # Fetch and parse webpage content
      response= requests.get(url)
      soup= BeautifulSoup(response.content, "html.parser")
      text= " ".join([p.get_text() for p in soup.find_all("p")])

      # Split text into chunks of approximately 4000 characters
      chunks= [text[i:i + 4000] for i in range(0, len(text), 4000)]

      summarization_prompt = """
      Please provide a concise summary of the following text. The summary should:
        - Capture the main ideas and key points
        - Be well-organized and coherent
        - Maintain the original meaning and context
        - Exclude any redundant or unnecessary information
        
       Text to summarize:
        """
        
    # Process chunks and get summaries
    summaries = []

    for i, chunk in enumerate(chunks, 1):
      print(f"Preprocessing part {i} of {len(chunks)}...")

      response= client.chat.completions.create(
          model= "gpt-3.5-turbo",
          messages=
          [
                    {"role": "system", "content": "You are a precise and concise text summarizer."},
                    {"role": "user", "content": f"{summarization_prompt}\n{chunk}"}
                ],
                max_tokens=300,
                temperature=0.5
       )
       summaries.append(response.choices[0].message.content.strip())

     # Combine summaries if needed
    final_summary = "\n\n".join(summaries)
    if len(chunks) >1:
       # Create a final, consolidated summary
       response= client.chat.completions.create(
           model="gpt-3.5-turbo",
           messages=[
                    {"role": "system", "content": "You are a precise and concise text summarizer."},
                    {"role": "user", "content": f"Please consolidate these summaries into a single coherent summary:\n{final_summary}"}
                ],
                max_tokens=300,
                temperature=0.5
            )
            final_summary = response.choices[0].message.content.strip()
            
        return final_summary

  except Exception as e:
    return f"An error occurred:  {str(e)}"

input_url= input("Enter the URL to summarize: ")
print("Processing the webpage")
summary= get_webpage_summary(input_url)
print("\n--- Summary ---\n")
print(summary)
